!function(){"use strict";class e{constructor(e,t,s,i,n,r){this._name=e.name,this._link=e.link,this.id=e._id,this.isLiked=e.isLiked,this._template=t,this._handleImageClick=s,this._templateClone=this._template.content.cloneNode(!0),this._cardImage=this._templateClone.querySelector(".card__image"),this._likeButton=this._templateClone.querySelector(".card__button"),this.handleDelete=i,this.handleLike=n,this.openDeletePopup=r,this._checkInitialLike()}_checkInitialLike(){this.isLiked?this._likeButton.classList.add("card__button-clicked"):this._likeButton.classList.remove("card__button-clicked")}getCard(){return this._cardImage.src=this._link,this._cardImage.alt=this._name,this._templateClone.querySelector(".card__text").textContent=this._name,this._setEventListeners(),this._templateClone}_deleteCard(e){e.target.closest(".card").remove()}_likeCard(e){e.target.classList.toggle("card__button-clicked")}_setEventListeners(){this._templateClone.querySelector(".card__button").addEventListener("click",(e=>{this.handleLike(this.id,this.isLiked).then((e=>e.json())).then((e=>console.log(e))),this._likeCard(e),this.isLiked=!this.isLiked})),this._templateClone.querySelector(".card__delete-button").addEventListener("click",(e=>{const t=e.target.closest(".card");this.openDeletePopup(this.id,t)})),this._cardImage.addEventListener("click",this._handleImageClick)}}class t{constructor(e,t){this._options=e,this._formElement=t,this._inputList=Array.from(this._formElement.querySelectorAll(this._options.inputSelector)),this._buttonElement=this._formElement.querySelector(this._options.submitButtonSelector)}_setEventListeners(){this._toggleButtonState(),this._inputList.forEach((e=>{e.addEventListener("input",(()=>{this._checkInputValidity(e),this._toggleButtonState()}))}))}_toggleButtonState(){this._checkValidInput()?this.disableSubmitButton():this.enableSubmitButton()}disableSubmitButton(){this._buttonElement.setAttribute("disabled",""),this._buttonElement.classList.add(this._options.inactiveButtonClass)}enableSubmitButton(){this._checkValidInput()||(this._buttonElement.removeAttribute("disabled"),this._buttonElement.classList.remove(this._options.inactiveButtonClass))}_checkValidInput(){return this._inputList.some((e=>!e.validity.valid))}_checkInputValidity(e){e.validity.valid?this._hideInputError(e):this._showInputError(e,e.validationMessage)}_hideInputError(e){const t=this._formElement.querySelector(`.form__${e.id}-error`);e.classList.remove(this._options.inputErrorClass),t.textContent=""}_showInputError(e,t){const s=this._formElement.querySelector(`.form__${e.id}-error`);e.classList.add(this._options.inputErrorClass),s.textContent=t}resetValidation(){this._inputList.forEach((e=>{this._hideInputError(e)})),this.enableSubmitButton()}enableValidation(){this._setEventListeners()}}class s{constructor(e){this._popup=document.querySelector(e),this._closeButton=this._popup.querySelector(".popup__close-button"),this._handleEscClose=this._handleEscClose.bind(this)}open(){this._popup.classList.add("popup_opened"),document.addEventListener("keydown",this._handleEscClose)}close(){this._popup.classList.remove("popup_opened"),document.removeEventListener("keydown",this._handleEscClose)}_handleEscClose(e){"Escape"===e.key&&this.close()}setEventListeners(){this._popup.addEventListener("click",(e=>{e.target.classList.contains("popup")&&this.close()})),this._closeButton.addEventListener("click",(()=>{this.close()}))}}class i extends s{constructor(e,t){super(e),this._handleSubmit=t,this._popupForm=this._popup.querySelector(".popup__form"),this._submitButton=this._popup.querySelector(".popup__button")}_getInputValues(){return Object.fromEntries(Array.from(this._popup.querySelectorAll(".form__input")).map((e=>[e.id,e.value])))}setEventListeners(){this._popupForm.addEventListener("submit",(e=>{e.preventDefault();const t=this._submitButton.textContent;this._submitButton.textContent="Saving...",this._data=this._getInputValues(),this._handleSubmit(e,this._data),this._submitButton.textContent=t})),super.setEventListeners()}}class n extends s{constructor(e,t,s,i){super(e),this.cardId=t,this.cardElement=s,this.handleDelete=i,this._popupForm=this._popup.querySelector(".popup__form"),this._handleSubmit=this._handleSubmit.bind(this)}_handleSubmit(e){e.preventDefault(),this.handleDelete(this.cardId,this.cardElement),this.close(),this._popupForm.removeEventListener("submit",this._handleSubmit)}setEventListeners(){this._popupForm.addEventListener("submit",this._handleSubmit),super.setEventListeners()}}const r={formSelector:".popup__form",inputSelector:".popup__input",submitButtonSelector:".popup__button",inactiveButtonClass:"popup__button_disabled",inputErrorClass:"popup__input_type_error",errorClass:"popup__error_visible"},o=document.querySelector("#card__template"),a=(document.querySelector(".cards"),document.querySelector(".profile__edit-button")),c=document.querySelector(".profile__button"),l=document.querySelector(".profile__title"),u=document.querySelector(".profile__subtitle"),p=document.forms.edit_profile_form,h=document.forms.new_place_form,d=(document.forms.confirm_delete_form,document.querySelector(".form__name")),_=document.querySelector(".form__description"),m=document.querySelector(".profile__avatar"),f=document.querySelector(".profile__avatar_wrapper"),b=new class{constructor(e){this.options=e,this.baseUrl=e.baseUrl,this.headers=e.headers}getCards(){return fetch(`${this.baseUrl}/cards`,{headers:this.headers})}fetchUserInfo(){return fetch(`${this.baseUrl}/users/me`,{headers:this.headers})}postUserInfo(e){return fetch("https://around-api.en.tripleten-services.com/v1/users/me",{method:"PATCH",headers:this.headers,body:JSON.stringify({name:`${e["name-input"]}`,about:`${e["description-input"]}`})})}postCard(e){return fetch("https://around-api.en.tripleten-services.com/v1/cards",{method:"POST",headers:this.headers,body:JSON.stringify({name:`${e.name}`,link:`${e.link}`})})}deleteCard(e){return fetch("https://around-api.en.tripleten-services.com/v1/cards/"+e,{method:"DELETE",headers:{authorization:"c6945e47-b548-4e1c-b20e-926f9841fa5f"}})}handleLike(e,t){return t?fetch("https://around-api.en.tripleten-services.com/v1/cards/"+e+"/likes",{method:"DELETE",headers:{authorization:"c6945e47-b548-4e1c-b20e-926f9841fa5f"}}):fetch("https://around-api.en.tripleten-services.com/v1/cards/"+e+"/likes",{method:"PUT",headers:{authorization:"c6945e47-b548-4e1c-b20e-926f9841fa5f"}})}changeProfilePicture(e){return console.log(e["image-url"]),fetch("https://around-api.en.tripleten-services.com/v1/users/me/avatar",{method:"PATCH",headers:this.headers,body:JSON.stringify({avatar:`${e["image-url"]}`})})}}({baseUrl:"https://around-api.en.tripleten-services.com/v1",headers:{authorization:"c6945e47-b548-4e1c-b20e-926f9841fa5f","Content-Type":"application/json"}}),v=new i(".edit-popup",(function(e,t){y.setUserInfo(t),b.postUserInfo(t),b.fetchUserInfo(),v.close()})),E=new i(".add-popup",(function(e,t){const s={name:t.title,link:t["image-url"]};b.postCard(s).then((e=>e.json())).then((e=>{C.renderer(e)})),e.target.reset(),g.disableSubmitButton(),E.close()})),L=new i(".profile-picture-popup",(function(e,t){m.src=t["image-url"],console.log(m.src),b.changeProfilePicture(t).then(b.fetchUserInfo()),L.close()})),S=new t(r,p),g=new t(r,h),k=new class extends s{constructor(e){super(e)}open(e){const t=this._popup.querySelector(".image-popup__image");t.src=e.target.src,t.alt=e.target.alt,this._popup.querySelector(".image-popup__text").textContent=e.target.alt,super.open()}}(".image-popup"),C=new class{constructor(e){let{renderer:t,selector:s}=e;this.renderer=t,this._element=document.querySelector(s)}renderItems(e){e.forEach((e=>{console.log(e),this.renderer(e)}))}addItem(e){this._element.prepend(e)}}({renderer:t=>{const s=new e(t,o,I,b.deleteCard,b.handleLike,q);C.addItem(s.getCard())},selector:".cards"}),y=new class{constructor(e,t){this._profileFormName=e,this._profileFormDescription=t}getUserInfo(){return{"name-input":`${this._profileFormName.textContent}`,"description-input":`${this._profileFormDescription.textContent}`}}setUserInfo(e){this._profileFormName.textContent=e["name-input"],this._profileFormDescription.textContent=e["description-input"]}}(l,u);function I(e){k.open(e)}function q(e,t){const s=new n(".confirm-delete-popup",e,t,B);s.setEventListeners(),s.open()}function B(e,t){b.deleteCard(e).then(t.remove())}a.addEventListener("click",(function(){const e=y.getUserInfo();d.value=e["name-input"],_.value=e["description-input"],y.setUserInfo(e),S.resetValidation(),v.open()})),c.addEventListener("click",(()=>{E.open()})),f.addEventListener("click",(function(){L.open()})),S.enableValidation(),g.enableValidation(),k.setEventListeners(),E.setEventListeners(),v.setEventListeners(),L.setEventListeners(),(async()=>{(await b.getCards().then((e=>e.json())).then((e=>e))).forEach((e=>{C.renderer(e)}))})(),b.fetchUserInfo().then((e=>e.json())).then((e=>{console.log(e),m.src=e.avatar,y.setUserInfo({"name-input":e.name,"description-input":e.about})}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,